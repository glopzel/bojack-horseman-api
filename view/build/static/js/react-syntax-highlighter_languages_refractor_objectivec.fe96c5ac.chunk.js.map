{"version":3,"sources":["../node_modules/refractor/lang/objectivec.js","../node_modules/refractor/lang/c.js"],"names":["refractorC","__webpack_require__","objectivec","Prism","register","languages","extend","keyword","string","operator","module","exports","displayName","aliases","c","class-name","pattern","lookbehind","number","insertBefore","macro","alias","inside","directive","constant"],"mappings":"8FAEA,IAAAA,EAAiBC,EAAQ,GAIzB,SAAAC,EAAAC,GACAA,EAAAC,SAAAJ,GACAG,EAAAE,UAAAH,WAAAC,EAAAE,UAAAC,OAAA,KACAC,QAAA,wYACAC,OAAA,qFACAC,SAAA,iEAEAN,EAAAE,UAAAH,WAAA,cAVAQ,EAAAC,QAAAT,EACAA,EAAAU,YAAA,aACAV,EAAAW,QAAA,mCCAA,SAAAC,EAAAX,GACAA,EAAAE,UAAAS,EAAAX,EAAAE,UAAAC,OAAA,SACAS,aAAA,CACAC,QAAA,4BACAC,YAAA,GAEAV,QAAA,sUACAE,SAAA,kDACAS,OAAA,0GAEAf,EAAAE,UAAAc,aAAA,cACAC,MAAA,CAGAJ,QAAA,qDACAC,YAAA,EACAI,MAAA,WACAC,OAAA,CAEAd,OAAA,CACAQ,QAAA,8CACAC,YAAA,GAGAM,UAAA,CACAP,QAAA,4GACAC,YAAA,EACAI,MAAA,aAKAG,SAAA,sIAEArB,EAAAE,UAAAS,EAAA,QArCAJ,EAAAC,QAAAG,EACAA,EAAAF,YAAA,IACAE,EAAAD,QAAA","file":"static/js/react-syntax-highlighter_languages_refractor_objectivec.fe96c5ac.chunk.js","sourcesContent":["'use strict';\n\nvar refractorC = require('./c.js');\nmodule.exports = objectivec;\nobjectivec.displayName = 'objectivec';\nobjectivec.aliases = [];\nfunction objectivec(Prism) {\n  Prism.register(refractorC);\n  Prism.languages.objectivec = Prism.languages.extend('c', {\n    keyword: /\\b(?:asm|typeof|inline|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|union|unsigned|void|volatile|while|in|self|super)\\b|(?:@interface|@end|@implementation|@protocol|@class|@public|@protected|@private|@property|@try|@catch|@finally|@throw|@synthesize|@dynamic|@selector)\\b/,\n    string: /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1|@\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n    operator: /-[->]?|\\+\\+?|!=?|<<?=?|>>?=?|==?|&&?|\\|\\|?|[~^%?*\\/@]/\n  });\n  delete Prism.languages.objectivec['class-name'];\n}","'use strict';\n\nmodule.exports = c;\nc.displayName = 'c';\nc.aliases = [];\nfunction c(Prism) {\n  Prism.languages.c = Prism.languages.extend('clike', {\n    'class-name': {\n      pattern: /(\\b(?:enum|struct)\\s+)\\w+/,\n      lookbehind: true\n    },\n    keyword: /\\b(?:_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|asm|typeof|inline|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|union|unsigned|void|volatile|while)\\b/,\n    operator: />>=?|<<=?|->|([-+&|:])\\1|[?:~]|[-+*/%&|^!=<>]=?/,\n    number: /(?:\\b0x(?:[\\da-f]+\\.?[\\da-f]*|\\.[\\da-f]+)(?:p[+-]?\\d+)?|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ful]*/i\n  });\n  Prism.languages.insertBefore('c', 'string', {\n    macro: {\n      // allow for multiline macro definitions\n      // spaces after the # character compile fine with gcc\n      pattern: /(^\\s*)#\\s*[a-z]+(?:[^\\r\\n\\\\]|\\\\(?:\\r\\n|[\\s\\S]))*/im,\n      lookbehind: true,\n      alias: 'property',\n      inside: {\n        // highlight the path of the include statement as a string\n        string: {\n          pattern: /(#\\s*include\\s*)(?:<.+?>|(\"|')(?:\\\\?.)+?\\2)/,\n          lookbehind: true\n        },\n        // highlight macro directives as keywords\n        directive: {\n          pattern: /(#\\s*)\\b(?:define|defined|elif|else|endif|error|ifdef|ifndef|if|import|include|line|pragma|undef|using)\\b/,\n          lookbehind: true,\n          alias: 'keyword'\n        }\n      }\n    },\n    // highlight predefined macros as constants\n    constant: /\\b(?:__FILE__|__LINE__|__DATE__|__TIME__|__TIMESTAMP__|__func__|EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|stdin|stdout|stderr)\\b/\n  });\n  delete Prism.languages.c['boolean'];\n}"],"sourceRoot":""}